import { SiteVisitService } from './site-visit.service';
import { SiteVisitDto } from './dto/site-visit.dto';
export declare class SiteVisitController {
    private readonly service;
    constructor(service: SiteVisitService);
    create(data: Omit<SiteVisitDto, 'createdAt'>): Promise<{
        createdAt: Date;
        id: string;
        ipAddress: string;
        userAgent: string | null;
        referer: string | null;
        pageUrl: string | null;
        country: string | null;
        region: string | null;
        city: string | null;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        sessionId: string | null;
        userId: string | null;
        visitDuration: number | null;
    }>;
    findAll(): Promise<({
        user: {
            createdAt: Date;
            id: string;
            country: string;
            city: string | null;
            name: string;
            email: string;
            phone: string | null;
            birthDate: Date | null;
            address: string | null;
            company: string | null;
            position: string | null;
            avatarUrl: string | null;
            passwordHash: string | null;
            googleId: string | null;
            emailVerified: boolean;
            isActive: boolean;
            preferredContactMethod: string;
            updatedAt: Date;
            lastLogin: Date | null;
        };
    } & {
        createdAt: Date;
        id: string;
        ipAddress: string;
        userAgent: string | null;
        referer: string | null;
        pageUrl: string | null;
        country: string | null;
        region: string | null;
        city: string | null;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        sessionId: string | null;
        userId: string | null;
        visitDuration: number | null;
    })[]>;
    findOne(id: string): Promise<{
        user: {
            createdAt: Date;
            id: string;
            country: string;
            city: string | null;
            name: string;
            email: string;
            phone: string | null;
            birthDate: Date | null;
            address: string | null;
            company: string | null;
            position: string | null;
            avatarUrl: string | null;
            passwordHash: string | null;
            googleId: string | null;
            emailVerified: boolean;
            isActive: boolean;
            preferredContactMethod: string;
            updatedAt: Date;
            lastLogin: Date | null;
        };
    } & {
        createdAt: Date;
        id: string;
        ipAddress: string;
        userAgent: string | null;
        referer: string | null;
        pageUrl: string | null;
        country: string | null;
        region: string | null;
        city: string | null;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        sessionId: string | null;
        userId: string | null;
        visitDuration: number | null;
    }>;
    remove(id: string): Promise<{
        createdAt: Date;
        id: string;
        ipAddress: string;
        userAgent: string | null;
        referer: string | null;
        pageUrl: string | null;
        country: string | null;
        region: string | null;
        city: string | null;
        latitude: import("@prisma/client/runtime/library").Decimal | null;
        longitude: import("@prisma/client/runtime/library").Decimal | null;
        sessionId: string | null;
        userId: string | null;
        visitDuration: number | null;
    }>;
}
